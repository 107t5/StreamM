name: Create release and publish

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      REF_NAME: ${{ github.ref_name }}

    steps:
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "7.0"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: "5.x"

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get -y upgrade
          sudo apt-get install -yq git curl build-essential

      - name: Build project
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          git checkout $latest_tag

          dotnet restore "StreamMasterAPI/StreamMasterAPI.csproj"
          dotnet build "StreamMasterAPI/StreamMasterAPI.csproj" -c Debug >/dev/null

          cd streammasterwebui
          npm install
          npm run build
          mkdir -p "$GITHUB_WORKSPACE/publish/wwwroot/"
          cp -R build/* "$GITHUB_WORKSPACE/publish/wwwroot/"
          cd ..

          cd StreamMasterAPI
          dotnet publish --no-restore "StreamMasterAPI.csproj" -c Debug -o "$GITHUB_WORKSPACE/publish" /p:UseAppHost=false >/dev/null

      - name: Zip publish directory
        run: |
          cd publish
          zip -r ../publish-${{ env.GitVersion_SemVer }}.zip .

      - name: Tar publish directory
        run: |
          cd publish
          tar -czvf ../publish-${{ env.GitVersion_SemVer }}.tar.gz .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
        with:
          tag_name: v${{ env.GitVersion_SemVer }}
          release_name: v${{ env.GitVersion_SemVer }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (zip)
        id: upload-release-asset-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish-${{ env.GitVersion_SemVer }}.zip
          asset_name: publish-${{ env.GitVersion_SemVer }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset (tar.gz)
        id: upload-release-asset-tar-gz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish-${{ env.GitVersion_SemVer }}.tar.gz
          asset_name: publish-${{ env.GitVersion_SemVer }}.tar.gz
          asset_content_type: application/gzip
