name: Mirror to Docker Hub

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Specific tag to mirror (leave empty for all tags)'
        required: false
        type: string
  workflow_run:
    workflows: ["Shared Docker Build"]
    types:
      - completed

permissions:
  contents: read
  packages: read

jobs:
  mirror:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Mirror images
        run: |
          set -euo pipefail
          DOCKERHUB_USER="${{ secrets.DOCKERHUB_USERNAME }}"
          GH_OWNER="${{ github.repository_owner }}"
          SPECIFIC_TAG="${{ inputs.tag }}"

          if [ -n "$SPECIFIC_TAG" ]; then
            echo "Processing single tag: $SPECIFIC_TAG"
            TAGS="$SPECIFIC_TAG"
          else
            # Get all tags with pagination
            page=1
            TAGS=""
            while true; do
              response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                "https://api.github.com/users/$GH_OWNER/packages/container/streammaster/versions?per_page=100&page=$page")

              current_tags=$(echo "$response" | jq -r '.[] | .metadata.container.tags[]')

              if [ -z "$current_tags" ]; then
                break
              fi

              TAGS+=$'\n'"$current_tags"
              ((page++))
            done

            # Remove duplicates and empty lines
            TAGS=$(echo "$TAGS" | sort -u | sed '/^$/d')
          fi

          echo "Discovered tags:"
          echo "$TAGS"

          for TAG in $TAGS; do
            # Check existence using Docker Hub API
            if ! curl -sSfL "https://hub.docker.com/v2/repositories/$DOCKERHUB_USER/streammaster/tags/$TAG/" >/dev/null 2>&1; then
              echo "Mirroring tag: ${TAG}"

              # Pull the image manifest
              docker buildx imagetools inspect ghcr.io/$GH_OWNER/streammaster:${TAG}

              # Pull and push for each platform
              for PLATFORM in linux/amd64 linux/arm64; do
                echo "Processing platform: $PLATFORM"
                docker pull --platform $PLATFORM ghcr.io/$GH_OWNER/streammaster:${TAG}
                docker tag ghcr.io/$GH_OWNER/streammaster:${TAG} $DOCKERHUB_USER/streammaster:${TAG}

                # Push with retries
                for attempt in {1..3}; do
                  if docker push $DOCKERHUB_USER/streammaster:${TAG}; then
                    break
                  fi
                  echo "Push attempt $attempt failed, retrying..."
                  sleep $((attempt * 5))
                done
              done

              sleep 5  # Rate limit protection
            else
              echo "Tag $TAG already exists in Docker Hub, skipping"
            fi
          done
